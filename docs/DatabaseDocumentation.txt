We will be storing our data in MongoDB in the following JSON format.

{
  "username": [
	[
		"url":  "",
		"id": "",
		"time": ""
		"has_caption": "",
		"user_has_liked": ""
		"likes": "",
		"hashtags": "",
		"filter": "",
		"comment_count": "",
		"are_users_tagged": "",
		{ "label": "", "...":, ...
		}
	],
	[ "each list in this represents one image's data"
	],
	[ "..."
	], 
	...
  ]
}

The username field means that we take the person's instagram name to store all of their data. Then we create a list
of lists, each list holding the data from a single image/media page from Instagram and Google Image API calls.
The data contains the url of the image, which we can use to get the image. The ID is what makes each image unique,
and we use that to check to make sure that we don't have duplicate images in the database. The time is the time
the image was posted. The has_caption field indicates whether or not the image has a caption, in case we wanted
to use that as an indicator of whether or not an image was successful. The user_has_liked field indicates whether or
not the user themself had liked their own post, mostly there to be cheeky, but if we want to find a correlation
between total likes and whether the user liked their own post or not we could use it. The likes field is simply
the total amount of likes, which is used for the analysis of the success of the picture, although we could use
other things as well. Hashtags are the hashtags of the post, which can be analyzed seperately from the content of
the picture or using it as an indicator of the success of the picture as well. The filter is the filter that was 
used on the picture. It returns "Normal" if there was no filter. The comment_count field is the number of comments
on the post, which can also be used as an indicator alongside the likes. The are_users_tagged field checks to
see if you tagged any users in the Instagram post, again, it can be used as an indicator of success of the post.
And there is a dictionary as the last variable in each image's thing which contains the labels that the Google
Image API returned as being what the picture most likely is about. If the label is above a 90% likeliness then it is
added to the dictionary, otherwise we only take the highest likeliness.